- name: download k3s binary
  ansible.builtin.get_url:
    url: "{{ settings.rancher_node.k3s_binary_url }}"
    dest: /usr/local/bin/k3s
    mode: +x
  register: download_k3s_binary

- name: debug download_k3s_binary
  ansible.builtin.debug:
    msg: "{{ download_k3s_binary }}"
  ignore_errors: true

- name: acquire k3s script
  ansible.builtin.get_url:
    url: "{{ settings.rancher_node.k3s_script_url }}"
    dest: /home/vagrant/k3s-install.sh
    mode: +x
  register: acquire_k3s_script

- name: debug acquire_k3s_script
  ansible.builtin.debug:
    msg: "{{ acquire_k3s_script }}"
  ignore_errors: true

- name: mkdir /etc/rancher/k3s
  ansible.builtin.file:
    path: /etc/rancher/k3s
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: template the registries.yaml over to k3s directory
  ansible.builtin.template:
    src: registries.yaml.j2
    dest: /etc/rancher/k3s/registries.yaml
    owner: root
    group: root
    mode: '0644'
  register: registries_yaml_result

- name: debug registries_yaml_result
  ansible.builtin.debug:
    msg: "{{ registries_yaml_result }}"
  ignore_errors: true

- name: apt install with items and update cache yes
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - libnss-resolve
    - ca-certificates
    - curl
    - gnupg
    - lsb-release
    - htop
    - neovim
  register: apt_install_with_items_and_update_cache_yes

- name: debug apt_install_with_items_and_update_cache_yes
  ansible.builtin.debug:
    msg: "{{ apt_install_with_items_and_update_cache_yes.stdout }}"
  ignore_errors: true

- name: create /etc/systemd/resolved.conf
  ansible.builtin.copy:
    dest: /etc/systemd/resolved.conf
    content: |
      [Resolve]
      DNS={{ settings.main_dns }}
      FallbackDNS={{ settings.alternate_dns }}

- name: systemd restart systemd-resolved
  ansible.builtin.systemd:
    name: systemd-resolved.service
    state: restarted

- name: add to /etc/hosts file
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ settings.docker_registry.ip }} {{ settings.docker_registry.domain }}"
    state: present
    create: yes
    owner: root
    group: root
    mode: '0644'
  register: add_to_etc_hosts

- name: install k3s
  ansible.builtin.shell: |
    INSTALL_K3S_SKIP_DOWNLOAD=true INSTALL_K3S_VERSION={{ settings.rancher_node.k3s_initial_version }} /home/vagrant/k3s-install.sh --resolv-conf /run/systemd/resolve/resolv.conf
  args:
    chdir: /home/vagrant
  register: install_k3s

- name: download helm tar.gz
  ansible.builtin.get_url:
    url: "{{ settings.rancher_node.helm_binary_url }}"
    dest: /home/vagrant/helm.tar.gz
  register: download_helm_tar_gz

- name: debug helm binary download
  ansible.builtin.debug:
    msg: "{{ download_helm_tar_gz }}"
  ignore_errors: true

- name: extract helm tar.gz
  ansible.builtin.unarchive:
    src: /home/vagrant/helm.tar.gz
    dest: /home/vagrant
    remote_src: yes
  register: extract_helm_tar_gz

- name: debug helm tar gz extract
  ansible.builtin.debug:
    msg: "{{ extract_helm_tar_gz }}"
  ignore_errors: true

- name: move helm binary to /usr/local/bin
  ansible.builtin.copy:
    src: /home/vagrant/linux-amd64/helm
    dest: /usr/local/bin/helm
    mode: +x
    remote_src: yes
  register: move_helm_binary
